{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/HeaderItems/headerItem.js","webpack:///./src/components/Header/header.js","webpack:///./src/components/Blurb/blurb.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","HeaderItem","link","react_default","gatsby_browser_entry","to","className","Header","siteTitle","HeaderItems_headerItem","defaultProps","Blurb","blurbQuery","gatsby_image_default","fluid","image","childImageSharp","react_markdown_default","source","blurb","childMarkdownRemark","rawMarkdownBody","_296956379","Layout","footerQuery","Header_header","Blurb_blurb","site","buildTime","_3265189579","node","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-0671a2855718d5c82b5b.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\n\r\nimport \"./headerItem.scss\";\r\n\r\nconst HeaderItem = ({ title, link }) => (\r\n  <Link to={link} className=\"headerItem\">\r\n    <h1>{title}</h1>\r\n  </Link>\r\n);\r\n\r\nexport default HeaderItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport HeaderItem from './HeaderItems/headerItem';\r\nimport './header.scss';\r\n\r\nconst Header = ({ siteTitle, children }) => (\r\n\t<div>\r\n\t\t<header className=\"header shadow\">\r\n\t\t\t<HeaderItem link=\"/\" title=\"HOME\" />\r\n\t\t\t<HeaderItem link=\"/about/\" title=\"ABOUT\" />\r\n\t\t\t<HeaderItem link=\"/projects/\" title=\"PROJECTS\" />\r\n\t\t\t<HeaderItem link=\"/contact/\" title=\"CONTACT\" />\r\n\t\t</header>\r\n\t\t<div>{children}</div>\r\n\t</div>\r\n);\r\n\r\nHeader.propTypes = {\r\n\tsiteTitle: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n\tsiteTitle: ``\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Image from 'gatsby-image';\r\nimport './blurb.scss';\r\nimport Markdown from 'react-markdown';\r\n\r\nconst Blurb = () => (\r\n\t<StaticQuery\r\n\t\tquery={blurbQuery}\r\n\t\trender={(data) => (\r\n\t\t\t<div className=\"blurb\">\r\n\t\t\t\t<Image fluid={data.image.childImageSharp.fluid} />\r\n\t\t\t\t<Markdown source={data.blurb.childMarkdownRemark.rawMarkdownBody} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default Blurb;\r\n\r\nconst blurbQuery = graphql`\r\n\tquery {\r\n\t\timage: file(relativePath: { eq: \"blurb.jpg\" }) {\r\n\t\t\tchildImageSharp {\r\n\t\t\t\tfluid(maxWidth: 2000) {\r\n\t\t\t\t\t...GatsbyImageSharpFluid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tblurb: file(relativePath: { eq: \"blurb.md\" }) {\r\n\t\t\tchildMarkdownRemark {\r\n\t\t\t\thtml\r\n\t\t\t\thtmlAst\r\n\t\t\t\trawMarkdownBody\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Header from '../Header/header';\r\nimport Blurb from '../Blurb/blurb';\r\n\r\nimport './layout.scss';\r\nconst Layout = ({ children }) => (\r\n\t<StaticQuery\r\n\t\tquery={footerQuery}\r\n\t\trender={(data) => (\r\n\t\t\t<div>\r\n\t\t\t\t<Header siteTitle=\"Hello.\">\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<div className=\"grid\">\r\n\t\t\t\t\t\t\t<div className=\"gridItem shadow\">\r\n\t\t\t\t\t\t\t\t<div className=\"children\">\r\n\t\t\t\t\t\t\t\t\t{children} {/* page content goes here */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"gridItem blurbItem shadow\">\r\n\t\t\t\t\t\t\t\t<Blurb />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Header>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<p> Site built with GatsbyJS. Last build: {data.site.buildTime} </p>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nLayout.propTypes = {\r\n\tchildren: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n\r\nconst footerQuery = graphql`\r\n\tquery {\r\n\t\tsite {\r\n\t\t\tbuildTime(formatString: \"dddd[,] MMMM Do[,] YYYY[,] h:mm a\")\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}