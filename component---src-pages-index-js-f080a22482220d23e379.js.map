{"version":3,"sources":["webpack:///./src/components/Blog/BlogSlug/blogSlug.js","webpack:///./src/components/Blog/blogCollator.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/HeaderItems/headerItem.js","webpack:///./src/components/Header/header.js","webpack:///./src/components/Blurb/blurb.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/seo.js"],"names":["BlogSlug","props","data","frontmatter","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","className","title","caption","latestEdit","BlogCollator","query","render","allMarkdownRemark","totalCount","edges","map","_ref","node","BlogSlug_blogSlug","key","id","_1093279277","IndexPage","layout","seo","keywords","Blog_blogCollator","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","HeaderItem","link","Header","siteTitle","HeaderItems_headerItem","defaultProps","Blurb","blurbQuery","gatsby_image_default","fluid","image","childImageSharp","react_markdown_default","source","blurb","childMarkdownRemark","rawMarkdownBody","_296956379","Layout","footerQuery","Header_header","Blurb_blurb","site","buildTimeZone","_4034071209","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-f080a22482220d23e379.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport './blogSlug.scss';\r\n\r\nconst BlogSlug = (props) => {\r\n\t// console.log(props.data);\r\n\tconst data = props.data;\r\n\tconst frontmatter = data.frontmatter;\r\n\treturn (\r\n\t\t<Link to={data.fields.slug}>\r\n\t\t\t<div className=\"blogSlug shadow\">\r\n\t\t\t\t<div className=\"titleCaptionContainer\">\r\n\t\t\t\t\t<h2>{frontmatter.title}</h2>\r\n\t\t\t\t\t<p>{frontmatter.caption}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>{frontmatter.latestEdit}</h3>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default BlogSlug;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport BlogSlug from './BlogSlug/blogSlug';\r\nimport './blogCollator.scss';\r\n\r\nconst BlogCollator = () => (\r\n\t<StaticQuery\r\n\t\tquery={query}\r\n\t\trender={(data) => (\r\n\t\t\t<div className=\"blogCollator\">\r\n\t\t\t\t<div className=\"blogCollatorHeader\">\r\n\t\t\t\t\t<h1>My {data.allMarkdownRemark.totalCount} Most Recent Blog Posts</h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => {\r\n\t\t\t\t\t// console.log(node.frontmatter);\r\n\t\t\t\t\treturn <BlogSlug key={node.id} data={node} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default BlogCollator;\r\n\r\nconst query = graphql`\r\n\tquery {\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { fileAbsolutePath: { regex: \"/posts/\" } }\r\n\t\t\tsort: { fields: [frontmatter___latestEdit], order: DESC }\r\n\t\t) {\r\n\t\t\ttotalCount\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tpostDate(formatString: \"dddd[,] MMMM Do[,] YYYY[,] h:mm a\")\r\n\t\t\t\t\t\tlatestEdit(formatString: \"dddd[,] MMMM Do[,] YYYY[,] h:mm a\")\r\n\t\t\t\t\t\tcaption\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfields {\r\n\t\t\t\t\t\tslug\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport BlogCollator from '../components/Blog/blogCollator';\r\nimport Layout from '../components/layout/layout.js';\r\nimport SEO from '../components/seo';\r\n\r\nconst IndexPage = () => (\r\n\t<Layout>\r\n\t\t<SEO title=\"Home\" keywords={[ `gatsby`, `application`, `react` ]} />\r\n\t\t<BlogCollator />\r\n\t</Layout>\r\n);\r\n\r\nexport default IndexPage;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\n\r\nimport \"./headerItem.scss\";\r\n\r\nconst HeaderItem = ({ title, link }) => (\r\n  <Link to={link} className=\"headerItem\">\r\n    <h1>{title}</h1>\r\n  </Link>\r\n);\r\n\r\nexport default HeaderItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport HeaderItem from './HeaderItems/headerItem';\r\nimport './header.scss';\r\n\r\nconst Header = ({ siteTitle, children }) => (\r\n\t<div>\r\n\t\t<header className=\"header shadow\">\r\n\t\t\t<HeaderItem link=\"/\" title=\"HOME\" />\r\n\t\t\t<HeaderItem link=\"/about/\" title=\"ABOUT\" />\r\n\t\t\t<HeaderItem link=\"/projects/\" title=\"PROJECTS\" />\r\n\t\t\t<HeaderItem link=\"/contact/\" title=\"CONTACT\" />\r\n\t\t</header>\r\n\t\t<div>{children}</div>\r\n\t</div>\r\n);\r\n\r\nHeader.propTypes = {\r\n\tsiteTitle: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n\tsiteTitle: ``\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Image from 'gatsby-image';\r\nimport './blurb.scss';\r\nimport Markdown from 'react-markdown';\r\n\r\nconst Blurb = () => (\r\n\t<StaticQuery\r\n\t\tquery={blurbQuery}\r\n\t\trender={(data) => (\r\n\t\t\t<div className=\"blurb\">\r\n\t\t\t\t<Image fluid={data.image.childImageSharp.fluid} />\r\n\t\t\t\t<Markdown source={data.blurb.childMarkdownRemark.rawMarkdownBody} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default Blurb;\r\n\r\nconst blurbQuery = graphql`\r\n\tquery {\r\n\t\timage: file(relativePath: { eq: \"blurb.jpg\" }) {\r\n\t\t\tchildImageSharp {\r\n\t\t\t\tfluid(maxWidth: 2000) {\r\n\t\t\t\t\t...GatsbyImageSharpFluid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tblurb: file(relativePath: { eq: \"blurb.md\" }) {\r\n\t\t\tchildMarkdownRemark {\r\n\t\t\t\thtml\r\n\t\t\t\thtmlAst\r\n\t\t\t\trawMarkdownBody\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Header from '../Header/header';\r\nimport Blurb from '../Blurb/blurb';\r\n\r\nimport './layout.scss';\r\nconst Layout = ({ children }) => (\r\n\t<StaticQuery\r\n\t\tquery={footerQuery}\r\n\t\trender={(data) => (\r\n\t\t\t<div>\r\n\t\t\t\t<Header siteTitle=\"Hello.\">\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<div className=\"grid\">\r\n\t\t\t\t\t\t\t<div className=\"gridItem shadow\">\r\n\t\t\t\t\t\t\t\t<div className=\"children\">\r\n\t\t\t\t\t\t\t\t\t{children} {/* page content goes here */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"gridItem blurbItem shadow\">\r\n\t\t\t\t\t\t\t\t<Blurb />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Header>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<p> Site built with GatsbyJS. Last build: {data.site.buildTimeZone} </p>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nLayout.propTypes = {\r\n\tchildren: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n\r\nconst footerQuery = graphql`\r\n\tquery {\r\n\t\tsite {\r\n\t\t\tbuildTimeZone\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}